{"version":3,"sources":["components/Home/methodFlow.jpg","components/Home/background.jpg","components/NavigationBar.js","components/Home/MethodExplanationPanel.js","components/Home/WelcomePanel.js","components/Home/ContactPanel.js","components/Home/ExamplePanel.js","components/Home/SideBar.js","components/Home/Home.js","components/SetData/UploadPanel.js","components/SetData/ParametersPanel.js","components/SetData/SetSideBar.js","components/SetData/SetData.js","components/Results/ResultsSideBar.js","components/Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","NavigationBar","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","href","Brand","MethodExplanationPanel","style","color","src","methodFlow","alt","fontSize","WelcomePanel","backgroundImage","background","ContactPanel","ExamplePanel","panes","menuItem","render","Tab","Pane","SideBar","menu","fluid","vertical","tabular","grid","paneWidth","tabWidth","Home","props","UploadPanel","ParametersPanel","SetData","Results","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54c3e8a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/methodFlow.332da9f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.4a7d9007.jpg\";","import React from 'react';\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .navbar { background-color: #ffff; }\n  a, .navbar-nav, .navbar-light .nav-link {\n    font-size: 1.2em;\n    color: #00695c;\n    &:hover { color: #2BBBAD; }\n  }\n  .navbar-brand {\n    font-size: 2em;\n    color: #00B894;\n    &:hover { color: white; }\n  }\n  .form-center {\n    position: absolute !important;\n    left: 25%;\n    right: 25%;\n  }\n`;\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item> \n          <Nav.Item><Nav.Link href=\"/set\">Set</Nav.Link></Nav.Item> \n          <Nav.Item><Nav.Link href=\"/results\">Results</Nav.Link></Nav.Item>\n        </Nav>\n        <Navbar.Brand>Cytomod Server</Navbar.Brand>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n)","import React from 'react'\nimport * as classNames from \"classnames\";\nimport methodFlow from './methodFlow.jpg';\n\n\nexport default function MethodExplanationPanel() {\n    return (\n        <div >\n            <h1><span style={{color: '#0FA6AB'}}>The Method Flow</span></h1>\n             <img src={methodFlow} alt=\"The flow as presented in the article\" />;\n             <h3 style={{color: '#0B7478', fontSize: 20}}>The Flow</h3> \n             <p style={{fontSize: 20}}> CytoMod—a modular data driven approach to identify cytokine modules and assess their associations with clinical phenotypes. \n                 Traditionally, associations between cytokine data (1) and clinical phenotypes (5) are tested directly using univariate models. \n                 CytoMod independently uses absolute cytokine profiles (1) or adjusted cytokine profiles (2) to generate cytokine modules (3)-sets of co-signaling cytokines within a given cohort. \n                 Modules are generated using unsupervised hierarchical clustering. \n                 Associations are then tested between module levels (4) and clinical phenotypes (5). \n                 By significantly reducing the number of associations tested CytoMod increases the statistical power to detect associations. \n                 By comparing modules across datasets, CytoMod can also identify “cores” of cytokines that consistently co-signal together. <a href=\"https://www.frontiersin.org/articles/10.3389/fimmu.2019.01338/\">(Cohen et al., 2019)</a>   \n                 </p>\n            <h1><span style={{color: '#0FA6AB'}}>Further Explanation</span></h1>\n            <p style={{fontSize: 20}} className=\"pt-running-text\">\n            Since analyzing large amount of cytokines requires multiple hypothesizes, which under takes the statistical power of the analysis, Cohen et al developed a computational approach, names CytoMod, for analyzing and identifying cytokines modules with statistical efficiency (Cohen et al., 2019).  \n            The method is composed from two parallel pipelines, containing several identical stages but on different data appearance - absolute values and adjusted values of cytokines concentrations. The motivation for also using the adjusted values was to discover hidden relationships by disabling the noise of the whole immune system reaction (which is typically high while dealing with attackers). \n            The approach has been applied on three data sets (divided into six overall groups, differ in the sampling compartments - blood/airway/nasal) concerning influenza patients. Here by a summary of the approach.\n            </p> \n            <h3 style={{color: '#0B7478', fontSize: 20}}>Step 1: Adjust the cytokines concentrations in order to isolate their relative concentration</h3>\n            <p style={{fontSize: 20}} className=\"pt-running-text\">\n            The adjustment calculations are: first step is to create a vector of cytokines mean concertation for each subject (sample). \n            Then, calculate a regression model for each 𝑐𝑦𝑡𝑜𝑘𝑖𝑛𝑒𝑗, using the mean vecto.  \n            Finally, By subtracting the predicted value (regression outcome) from the true value (sample value) the 𝑐𝑦𝑡𝑜𝑘𝑖𝑛𝑒𝑗_𝐴𝑑𝑗𝑢𝑠𝑡𝑒𝑑 (adjusted outcome) is created.\n            </p> \n            <h3 style={{color: '#0B7478', fontSize: 20}}>Step 2: Preform Complete-linkage agglomerative hierarchical clustering </h3>\n            <p style={{fontSize: 20}} className=\"pt-running-text\">\n            The clustering was performed in order to create cytokines modules and was based on the cytokines pairwise correlations (the distance metric). \n            Resembling to HCA, the algorithm ﻿iteratively group cytokines that possess similar patterns. \n            The results are presented in a dendrogram, which obtain the hierarchical sub-groups and the data distribution. \n            The similarity matrix was calculated separately for each compartment in each dataset. In addition, in order to identify cross-subjects cytokine modules, it was performed over cytokines. \n            Due to sensitivity issues, the algorithm contained bootstrapping mechanism (1000 repetitions of the clustering procedure with different subsets of the same data), which counted the number of times that each pair of cytokines were clustered in the same group. Hence, the final clustering was performed on this matrix. The hyper parameter K was chosen using the “gap statistic” heuristic method. \n            The clustering created K cytokines modules. Finally, a subject-specific score for each module was calculated as the mean value of all cytokines in the same module (after standardization). \n            </p> \n            <h3 style={{color: '#0B7478', fontSize: 20}}> Step 3: Assess associations between modules to the clinical phenotypes </h3>\n            <p style={{fontSize: 20}} className=\"pt-running-text\">\n            After standardization of the data, a regression model for each outcome column was calculated - i.e. the first step was to perform a logistic regression (for binary outcomes) or linear regression (for continues outcomes). \n            The regression was enrolled over all the previous step modules. For each dataset, compartment and cytokines expressions (adjusted/absolute), the coefficients (𝛽_𝑖), describing the associations between individual cytokines/cytokine modules to the symptom, were separate from each other. \n            In addition, the coefficients were pronounced using two adjusted p-values: \n            1. false-discovery rate (FDR, Benjamini Hochberg procedure, significant when q ≤ 0.2) \n            2. Family-wise error rate (FWER, Bonferroni-Holm method, more stringent, significant when p ≤ 0.05). \n            Both are fitted to handle multiple hypothesis tests. \n            Hence, the coefficients were the value symbolizing the relationships between cytokines (modules/absolute) and the outcomes and these values’ p-values were adjusted by two different corrections.\n            </p> \n            \n        </div>\n    )\n}\n","import React from 'react'\nimport * as classNames from \"classnames\";\nimport background from './background.jpg'\n\n\nexport default function WelcomePanel() {\n    return (\n        <div style={{backgroundImage: `url(${background})`}}>\n            <h1><span style={{color: '#0FA6AB'}}>Welcome to Cytomod</span></h1>\n            <p style={{fontSize: 20}} className=\"pt-running-text\">\n            This server will allow you to generate the cytomod method output. \n            Cytomod is a Modular Cytokine Analysis Method to identify sets of co-signaling cytokines\n            </p> \n            <p style={{color: '#0B7478', fontSize: 22}}>This server is based on an approach article found <a href=\"https://www.frontiersin.org/articles/10.3389/fimmu.2019.01338/\">here</a></p>\n            <p style={{fontSize: 20}} className=\"pt-running-text\">\n            In general, the approach, first of her kind, increases the statistical power of cytokines analysis and was demonstrated as efficient in discovering cytokine modules that are significantly associated with clinical phenotypes (sometimes even stronger than the individual cytokines).\n            In addition, it identified cores of co-signaling cytokines and therefore portrayed complex signaling structures. \n            Moreover, the method can be applied on any dataset since it requires only the cytokines measurements and optionally the outcomes. \n            Furthermore, the approach can also be seen as a dimensionality reduction method. However, it is different than other such methods (PCA, LDA and more, usually lower the dimension by creating new features) since it retains the ability to discover fundamental biological insights.\n            </p> \n        </div>\n    )\n}\n\n\n\n\n\n\n","import React from 'react'\n\nexport default function ContactPanel() {\n    return (\n        <div>\n         <p style={{fontSize: 20}} className=\"pt-running-text\"> <a href=\"https://www.hertz-lab.org/\">The Lab Web Page</a></p>  \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ExamplePanel() {\n    return (\n        <div>\n            <p style={{fontSize: 20}} className=\"pt-running-text\"> <a href=\"https://nbviewer.jupyter.org/github/liel-cohen/CytoMod/blob/master/cytomod_notebook.ipynb\">The Jupiter Notebook Example</a></p>  \n        </div>\n    )\n}\n","import React from 'react'\nimport  MethodExplanationPanel  from './MethodExplanationPanel'\nimport WelcomePanel from './WelcomePanel'\nimport ContactPanel from './ContactPanel'\nimport ExamplePanel from './ExamplePanel'\nimport { Tab } from 'semantic-ui-react'\n\n\nconst panes = [\n  { menuItem: 'Welcome', render: () => <Tab.Pane>{< WelcomePanel />}</Tab.Pane> },\n  { menuItem: 'Method Explanation', render: () => <Tab.Pane>{< MethodExplanationPanel />}</Tab.Pane> },\n  { menuItem: 'Example', render: () => <Tab.Pane>{< ExamplePanel />}</Tab.Pane> },\n  { menuItem: 'Contact', render: () => <Tab.Pane>{<ContactPanel / >}</Tab.Pane> },\n]\n\nconst SideBar = () => (\n  <Tab style={{fontSize: 20}} menu={{ fluid: true, vertical: true, tabular: true }} grid={{paneWidth: 14, tabWidth: 2}} panes={panes} />\n)\n\nexport default SideBar\n\n\n   \n\n\n","import React from 'react';\nimport SideBar from './SideBar'\n\nexport const Home = (props) => (\n  <div>\n    <SideBar / >\n  </div>\n)\n\n\n \n\n","import React from 'react'\n\nexport default function UploadPanel() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ParametersPanel() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { Tab }  from 'semantic-ui-react'\nimport  UploadPanel  from './UploadPanel'\nimport ParametersPanel from './ParametersPanel'\n\nconst panes = [\n    { menuItem: 'Upload Data', render: () => <Tab.Pane>{< UploadPanel />}</Tab.Pane> },\n    { menuItem: 'Set Parameters', render: () => <Tab.Pane>{< ParametersPanel />}</Tab.Pane> },\n]\n\nconst SideBar = () => (\n  <Tab style={{fontSize: 20}} menu={{ fluid: true, vertical: true, tabular: true }} grid={{paneWidth: 14, tabWidth: 2}} panes={panes} />\n)\n\nexport default SideBar\n      \n      \n         \n\n\n\n\n","import React from 'react'\nimport SideBar from './SetSideBar'\n\nexport default function SetData() {\n    return (\n        <div>\n        <SideBar / >\n        </div>\n    )\n}\n","import React from 'react'\nimport  OverviewPanel  from './OverviewPanel'\nimport ModelsClusteringPanel from './ModelsClusteringPanel'\nimport ModelsCorrelationPanel from './ModelsCorrelationPanel'\nimport OutcomAnalysis from './OutcomAnalysis'\nimport { Tab }  from 'semantic-ui-react'\n// import NevigationAbsAdj from './NevigationAbsAdj'\n\nconst panes = [\n    { menuItem: 'Overview', render: () => <Tab.Pane>{< OverviewPanel />}</Tab.Pane> },\n    { menuItem: 'Models Clustering', render: () => <Tab.Pane>{< ModelsClusteringPanel />}</Tab.Pane> },\n    { menuItem: 'Models Correlations', render: () => <Tab.Pane>{< ModelsCorrelationPanel />}</Tab.Pane> },\n    { menuItem: 'Outcom Analysis', render: () => <Tab.Pane>{< OutcomAnalysis />}</Tab.Pane> },\n\n]\n\nconst SideBar = () => (\n<Tab style={{fontSize: 20}} menu={{ fluid: true, vertical: true, tabular: true }} grid={{paneWidth: 14, tabWidth: 2}} panes={panes} />\n)\n\nexport default SideBar","import React from 'react'\nimport SideBar from './ResultsSideBar'\n\nexport default function Results() {\n    return (\n        <div>\n            <SideBar/>\n        </div>\n    )\n}\n","import React , { useEffect } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { NavigationBar } from './components/NavigationBar';\nimport { Home } from './components/Home/Home';\nimport SetData from './components/SetData/SetData';\nimport Results from './components/Results/Results';\n\nfunction App() {\n  // useEffect(() => {\n  //   fetch('/').then(response => {\n  //     response.json().then(\"Hi\");\n  //   })\n  //   return () => {\n  //   }\n  // }, [input])\n  return (\n    <div >\n    <React.Fragment>\n      <Router>\n      <NavigationBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/set\" component={SetData} />\n          <Route exact path=\"/results\" component={Results} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}