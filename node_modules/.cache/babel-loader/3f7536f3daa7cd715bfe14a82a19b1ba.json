{"ast":null,"code":"var _jsxFileName = \"/Users/hadasch/PycharmProjects/front_end/src/components/Results/Results.js\";\nimport React, { useState, useEffect } from 'react';\nimport OverviewPanel from './OverviewPanel';\nimport ModelsClusteringPanel from './ModelsClusteringPanel';\nimport ModelsCorrelationPanel from './ModelsCorrelationPanel';\nimport OutcomAnalysis from './OutcomAnalysis';\nimport { Tab } from 'semantic-ui-react';\nimport AllResults from '../Results/AllResults';\nimport * as ResultsService from '../../services/ResultsService';\nimport beckgroungTransperant from '../../beckgroungTransperant.png';\nexport default function Results({\n  state\n}) {\n  const [oldProject, setOldProjec] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setdata] = useState('');\n  const [gotResults, setGotResults] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [calculation, setCalculation] = useState(false);\n\n  function onSubmit() {\n    results(id);\n    setCalculation(false);\n  }\n\n  const results = id => {\n    if (id != null) {\n      ResultsService.getResults(id).then(response => {\n        const data = response.data;\n        setCalculation(true);\n        setdata(data);\n        setError(false);\n        setOldProjec(false);\n        setGotResults(true);\n      }).catch(e => {\n        console.log(e);\n        setCalculation(false);\n        setError(true);\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log({\n      state: state\n    });\n\n    if (state == null && name == \"\") {\n      setOldProjec(true);\n    } else if (state.name != null && state.id != null) {\n      setName(state.name);\n      setID(state.id);\n      results(state.id);\n    } else if (id != \"\") {\n      results(id);\n    }\n\n    return () => {};\n  }, []);\n  const panes = [{\n    menuItem: 'Overview',\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(OverviewPanel, {\n      id: id,\n      results: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))\n  }, {\n    menuItem: 'Modules Identification',\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ModelsClusteringPanel, {\n      id: id,\n      results: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))\n  }, {\n    menuItem: 'Module Correlations',\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ModelsCorrelationPanel, {\n      id: id,\n      results: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))\n  }, {\n    menuItem: 'Associations to Outcomes',\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(OutcomAnalysis, {\n      id: id,\n      results: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))\n  }, {\n    menuItem: 'All Results',\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(AllResults, {\n      id: id,\n      results: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, oldProject && React.createElement(Tab, {\n    style: {\n      fontSize: 20\n    },\n    menu: {\n      fluid: true,\n      vertical: true,\n      tabular: true\n    },\n    grid: {\n      paneWidth: 14,\n      tabWidth: 2\n    },\n    panes: [{\n      menuItem: 'Previous Results',\n      render: () => React.createElement(Tab.Pane, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundImage: `url(${beckgroungTransperant})`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Results for previous project\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Please insert your previous project run ID (was given during the run execution)\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Please note - the results will only be shown if the analysis occured in the past week\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        placeholder: \"id\",\n        onChange: event => setID(event.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), \"            \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: event => onSubmit(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Clicking the \\\"Submit\\\" button, will return previous run results. Loading the results might take several seconds.\")))\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), gotResults && React.createElement(Tab, {\n    style: {\n      fontSize: 20\n    },\n    menu: {\n      fluid: true,\n      vertical: true,\n      tabular: true\n    },\n    grid: {\n      paneWidth: 14,\n      tabWidth: 2\n    },\n    panes: panes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), calculation && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Please wait while the results are loaded...\")), error && React.createElement(\"h3\", {\n    style: {\n      textAlign: \"center\"\n    },\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Can't find the ID, please insert another project ID\"));\n}","map":{"version":3,"sources":["/Users/hadasch/PycharmProjects/front_end/src/components/Results/Results.js"],"names":["React","useState","useEffect","OverviewPanel","ModelsClusteringPanel","ModelsCorrelationPanel","OutcomAnalysis","Tab","AllResults","ResultsService","beckgroungTransperant","Results","state","oldProject","setOldProjec","error","setError","data","setdata","gotResults","setGotResults","name","setName","id","setID","calculation","setCalculation","onSubmit","results","getResults","then","response","catch","e","console","log","panes","menuItem","render","fontSize","fluid","vertical","tabular","paneWidth","tabWidth","backgroundImage","event","target","value","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport OverviewPanel from './OverviewPanel'\nimport ModelsClusteringPanel from './ModelsClusteringPanel'\nimport ModelsCorrelationPanel from './ModelsCorrelationPanel'\nimport OutcomAnalysis from './OutcomAnalysis'\nimport { Tab } from 'semantic-ui-react'\nimport AllResults from '../Results/AllResults'\nimport * as ResultsService from '../../services/ResultsService'\nimport beckgroungTransperant from '../../beckgroungTransperant.png'\n\n\n\nexport default function Results({state}) {\n  const [oldProject, setOldProjec] = useState(false)\n  const [error, setError] = useState(false)\n  const [data, setdata] = useState('')\n  const [gotResults, setGotResults] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [id, setID] = useState(\"\")\n  const [calculation, setCalculation] = useState(false)\n\n  \n  function onSubmit() {\n    results(id)\n    setCalculation(false)\n\n  }\n\n\n  const results = (id) => {\n    if(id != null ){\n      ResultsService.getResults(id).then((response) =>{\n        const data = response.data\n        setCalculation(true)\n        setdata(data)\n        setError(false)\n        setOldProjec(false)\n        setGotResults(true)\n\n    \n      }).catch((e)=>{\n        console.log(e)\n        setCalculation(false)\n        setError(true)\n  \n      })\n    }}\n    \n  useEffect(() => {\n    console.log({state: state})\n    if(state==null && name == \"\")\n    {   \n        setOldProjec(true)\n\n    }\n    else if(state.name != null && state.id != null){\n      setName(state.name)\n      setID(state.id)\n      results(state.id)\n\n    }\n    else if(id != \"\"){\n      results(id)\n    }\n    \n    return () => {\n     \n    }\n  }, [])\n\n  const panes = [\n      { menuItem: 'Overview', render: () => <Tab.Pane>{< OverviewPanel id = {id} results = {data}/ >}</Tab.Pane> },\n      { menuItem: 'Modules Identification', render: () => <Tab.Pane>{< ModelsClusteringPanel id = {id} results = {data}/>}</Tab.Pane> },\n      { menuItem: 'Module Correlations', render: () => <Tab.Pane>{< ModelsCorrelationPanel id = {id} results = {data}/>}</Tab.Pane> },\n      { menuItem: 'Associations to Outcomes', render: () => <Tab.Pane>{< OutcomAnalysis id = {id} results = {data}/>}</Tab.Pane> },\n      { menuItem: 'All Results', render: () => <Tab.Pane>{< AllResults id = {id} results = {data}/>}</Tab.Pane> }]\n  \n\n\n\nreturn ( \n \n    <div>\n      {oldProject && \n    <Tab style={{fontSize: 20}} \n      menu={{ fluid: true, vertical: true, tabular: true }} \n      grid={{paneWidth: 14, tabWidth: 2}} \n      panes={[\n        {menuItem: 'Previous Results', render: () => <Tab.Pane>{ <div style={{backgroundImage: `url(${beckgroungTransperant})`}} >\n        <form>\n        <h3>Results for previous project</h3>\n          <p>Please insert your previous project run ID (was given during the run execution)</p>\n          <p>Please note - the results will only be shown if the analysis occured in the past week</p>\n        <label>Id</label>\n        <input type=\"text\" name=\"id\" placeholder=\"id\" onChange={event => setID(event.target.value)}/ >            </form>\n        <p></p>\n        <input type=\"submit\" value=\"Submit\" onClick={(event) => onSubmit(event)}/>\n        <p>Clicking the \"Submit\" button, will return previous run results. Loading the results might take several seconds.</p>\n        </div>}</Tab.Pane>}]}\n      />               \n               \n                }\n        \n      {(gotResults) && \n      <Tab style={{fontSize: 20}} \n      menu={{ fluid: true, vertical: true, tabular: true }} \n      grid={{paneWidth: 14, tabWidth: 2}} \n      panes={panes}\n      />\n    }\n      {calculation && <React.Fragment>\n            <div className='loader'></div>\n            <div style={{ textAlign: \"center\" }}>Please wait while the results are loaded...</div>\n            </React.Fragment>}\n      {error &&  <h3 style = {{ textAlign: \"center\" }} className='error'>Can't find the ID, please insert another project ID</h3>}\n    </div>\n    \n    )\n}\n\n\n\n\n\n\n   \n\n\n"]},"metadata":{},"sourceType":"module"}