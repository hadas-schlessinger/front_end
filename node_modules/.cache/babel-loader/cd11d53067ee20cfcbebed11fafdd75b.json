{"ast":null,"code":"var _jsxFileName = \"/Users/hadasch/PycharmProjects/front_end/src/components/SetData/Calculating.js\";\nimport React, { useState, useEffect } from 'react';\nimport LoadingPage from './LoadingPage';\nimport { useHistory } from \"react-router-dom\";\nimport * as SetParams from '../../services/SetParams';\nexport default function Calculating(props) {\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n  const request = () => {\n    if (props.projectName == null || props.formID == null) {\n      navigateTo(\"set\");\n    }\n\n    SetParams.methodStatus(props.projectName, props.formID.id).then(response => {\n      console.log({\n        status: response.data.status\n      });\n\n      if (response.data.status == \"ERROR\") {\n        setError(true);\n      }\n\n      if (response.data.status == \"DONE\") {\n        setSuccess(true);\n        navigateTo(\"results\");\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      request();\n    }, 1000 * 60);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  function navigateTo(serviceName) {\n    const state = {\n      'name': props.projectName,\n      'id': props.formID.id\n    };\n    history.push(`/${serviceName}`, state);\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, !error && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      color: '#194d33',\n      fontSize: 20,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Your project ID is - \", props.formID.id), React.createElement(\"h2\", {\n    style: {\n      color: '#194d33',\n      fontSize: 20,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Your project name is -\", props.projectName, \" \"), React.createElement(LoadingPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), success && navigateTo(\"results\"), error && React.createElement(\"h3\", {\n    className: \"error\",\n    style: {\n      fontSize: 20,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Someting is wrong with the given parameters, please check them again\"));\n}","map":{"version":3,"sources":["/Users/hadasch/PycharmProjects/front_end/src/components/SetData/Calculating.js"],"names":["React","useState","useEffect","LoadingPage","useHistory","SetParams","Calculating","props","success","setSuccess","error","setError","history","request","projectName","formID","navigateTo","methodStatus","id","then","response","console","log","status","data","catch","e","interval","setInterval","clearInterval","serviceName","state","push","height","width","color","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React,  {useState, useEffect} from 'react'\nimport LoadingPage from './LoadingPage';\nimport { useHistory } from \"react-router-dom\";\nimport * as SetParams from  '../../services/SetParams'\n\n\n\nexport default function Calculating(props) {\n  const [success, setSuccess] = useState(false)\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n    const request = () => {\n      if(props.projectName==null || props.formID==null)\n      {\n        navigateTo(\"set\")\n      }\n      SetParams.methodStatus(props.projectName, props.formID.id).then((response) =>{\n        console.log({status: response.data.status});\n        if (response.data.status == \"ERROR\"){\n          setError(true)\n       }\n        if (response.data.status == \"DONE\"){\n          setSuccess(true)\n          navigateTo(\"results\")\n       }\n      \n      }).catch((e)=>{\n        console.log(e)\n      })\n  }\n      \n\nuseEffect(() => {\n  const interval = setInterval(() => {\n    request()\n    }, 1000*60)  \n  return () => {\n    clearInterval(interval)\n  }\n}, [])     \n       \n\n     function navigateTo(serviceName) {\n       const state = {'name': props.projectName, 'id': props.formID.id}\n       history.push(`/${serviceName}`, state);\n  }\n    \n      return (\n        <div style={{height: '100%', width:'100%'}}>\n            {!error &&\n            <React.Fragment>\n               <h2 style={{color: '#194d33', fontSize: 20, textAlign: 'center'}}>Your project ID is - {props.formID.id}</h2>\n               <h2 style={{color: '#194d33', fontSize: 20, textAlign: 'center'}}>Your project name is -{props.projectName} </h2>\n               <LoadingPage/>\n            </React.Fragment>\n            }\n            {success &&  navigateTo(\"results\")}\n            {error && <h3 className='error' style={{fontSize: 20, textAlign: 'center'}}>Someting is wrong with the given parameters, please check them again</h3>}  \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}