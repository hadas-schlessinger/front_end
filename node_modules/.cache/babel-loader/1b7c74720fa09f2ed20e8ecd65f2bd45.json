{"ast":null,"code":"var _jsxFileName = \"/Users/hadasch/PycharmProjects/front_end/src/components/Results/ResultsSchema.js\";\nimport React, { useState, useEffect } from 'react';\nimport beckgroungTransperant from '../../beckgroungTransperant.png';\nimport ImageView from './ImageView';\nimport NoResults from './NoResults';\nexport default function ResultsSchema(props) {\n  const [hasResults, sethasResults] = useState(false);\n  const [NoFigures, setNoFigures] = useState(false);\n  const [rows, setrows] = useState(Object.keys(props.results.image));\n\n  const hasFigure = () => {\n    if (props.results != '') {\n      let counter = 0;\n\n      for (const row of rows) {\n        if (props.results.location[row] == props.location) {\n          counter = counter + 1;\n        }\n      }\n\n      console.log(counter);\n\n      if (counter == 0) {\n        setNoFigures(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.results != '') {\n      setrows(Object.keys(props.results.image));\n      sethasResults(true);\n    }\n\n    hasFigure();\n    return () => {};\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${beckgroungTransperant})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.panel, \" Results for \", props.state, \" Cytokines for the \", props.id, \" Project \"), hasResults && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" Click to download any of the output figures \"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Figures\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, rows.map(row => React.createElement(ImageView, {\n    results: props.results,\n    row: row,\n    location: props.location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))))), NoFigures && React.createElement(NoResults, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/hadasch/PycharmProjects/front_end/src/components/Results/ResultsSchema.js"],"names":["React","useState","useEffect","beckgroungTransperant","ImageView","NoResults","ResultsSchema","props","hasResults","sethasResults","NoFigures","setNoFigures","rows","setrows","Object","keys","results","image","hasFigure","counter","row","location","console","log","backgroundImage","panel","state","id","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACa,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,OAAN,CAAcC,KAA1B,CAAD,CAAhC;;AAEA,QAAMC,SAAS,GAAG,MAAK;AACnB,QAAGX,KAAK,CAACS,OAAN,IAAe,EAAlB,EAAqB;AACjB,UAAIG,OAAO,GAAG,CAAd;;AACA,WAAI,MAAMC,GAAV,IAAiBR,IAAjB,EAAuB;AACnB,YAAGL,KAAK,CAACS,OAAN,CAAcK,QAAd,CAAuBD,GAAvB,KAA6Bb,KAAK,CAACc,QAAtC,EAA+C;AAC3CF,UAAAA,OAAO,GAACA,OAAO,GAAC,CAAhB;AACH;AACJ;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,UAAIA,OAAO,IAAE,CAAb,EAAe;AACXR,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ;AAEJ,GAdD;;AAgBAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,KAAK,CAACS,OAAN,IAAe,EAAlB,EAAqB;AACjBH,MAAAA,OAAO,CAACC,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,OAAN,CAAcC,KAA1B,CAAD,CAAP;AACAR,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AACDS,IAAAA,SAAS;AACT,WAAO,MAAM,CACZ,CADD;AAEH,GARQ,EAQN,EARM,CAAT;AAWA,SACI;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAG,OAAMrB,qBAAsB;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,KAAK,CAACkB,KAAX,mBAA+BlB,KAAK,CAACmB,KAArC,yBAA+DnB,KAAK,CAACoB,EAArE,cADT,EAIUnB,UAAU,IACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDI,IAAI,CAACgB,GAAL,CAASR,GAAG,IAET,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAIb,KAAK,CAACS,OAA5B;AAAqC,IAAA,GAAG,EAAII,GAA5C;AAAiD,IAAA,QAAQ,EAAIb,KAAK,CAACc,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADC,CADA,CAHF,CALR,EAoBWX,SAAS,IAAK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBzB,CADJ;AA0BH","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport beckgroungTransperant from '../../beckgroungTransperant.png'\nimport ImageView from './ImageView';\nimport NoResults from './NoResults';\n\n\n\nexport default function ResultsSchema(props) {\n    const [hasResults, sethasResults] = useState(false)\n    const [NoFigures, setNoFigures] = useState(false)\n    const [rows, setrows] = useState(Object.keys(props.results.image))\n    \n    const hasFigure = () =>{\n        if(props.results!=''){\n            let counter = 0\n            for(const row of rows) {\n                if(props.results.location[row]==props.location){\n                    counter=counter+1\n                }\n            }\n            console.log(counter)\n            if (counter==0){\n                setNoFigures(true)\n            }                      \n        }\n       \n    }\n\n    useEffect(() => {\n        if(props.results!=''){\n            setrows(Object.keys(props.results.image)) \n            sethasResults(true)\n        }\n        hasFigure()\n        return () => {     \n        }\n    }, [])\n\n \n    return (\n        <div style={{backgroundImage: `url(${beckgroungTransperant})`}}>           \n                 <h1>{props.panel} Results for {props.state} Cytokines for the {props.id} Project </h1>\n                \n                 \n                { hasResults && \n                <React.Fragment>\n                <h4> Click to download any of the output figures </h4>  \n                <h2>Figures</h2>\n                  <table>\n                  <tbody>\n                {rows.map(row =>                  \n                    \n                    <ImageView results = {props.results} row = {row} location = {props.location}/>\n\n                    )\n                }\n                </tbody>\n                </table>\n                </React.Fragment>\n                }\n                 { NoFigures &&  <NoResults />\n                \n                }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}