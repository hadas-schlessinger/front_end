{"ast":null,"code":"var _jsxFileName = \"/Users/hadasch/PycharmProjects/front_end/src/components/Results/OverviewPanel.js\";\nimport React, { useState, useEffect } from 'react';\nimport beckgroungTransperant from '../../beckgroungTransperant.png';\nimport ImageView from './ImageView';\nimport AbsModulesView from './AbsModulesView';\nimport AdjModulesView from './AdjModulesView';\nimport NoResults from './NoResults';\nexport default function OverviewPanel(props) {\n  const [hasResults, sethasResults] = useState(false);\n  const [rows, setrows] = useState([]);\n  const [error, setErrror] = useState(false);\n  useEffect(() => {\n    if (props.results != '') {\n      sethasResults(true);\n      setrows(Object.keys(props.results.image));\n    } else {\n      setErrror(true);\n    }\n\n    return () => {};\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${beckgroungTransperant})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Overview for project \", props.id), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"All generated modules are presented and can be downloaded, as well as figure pointing on thr motivation to adjust cytokine values\"), hasResults && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Modules\"), rows.map(row => React.createElement(AbsModulesView, {\n    results: props.results,\n    row: row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), rows.map(row => React.createElement(AdjModulesView, {\n    results: props.results,\n    row: row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Figures\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Click to download any of the output figures \"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, rows.map(row => React.createElement(ImageView, {\n    results: props.results,\n    row: row,\n    location: \"overview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))))), error && React.createElement(NoResults, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/hadasch/PycharmProjects/front_end/src/components/Results/OverviewPanel.js"],"names":["React","useState","useEffect","beckgroungTransperant","ImageView","AbsModulesView","AdjModulesView","NoResults","OverviewPanel","props","hasResults","sethasResults","rows","setrows","error","setErrror","results","Object","keys","image","backgroundImage","id","map","row"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,SAAR,IAAqBd,QAAQ,CAAC,KAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGO,KAAK,CAACO,OAAN,IAAe,EAAlB,EAAqB;AACjBL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,OAAO,CAACI,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACO,OAAN,CAAcG,KAA1B,CAAD,CAAP;AAEH,KAJD,MAKI;AACAJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AACD,WAAO,MAAM,CACZ,CADD;AAEH,GAXQ,EAWN,EAXM,CAAT;AAcA,SACI;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,eAAe,EAAG,OAAMjB,qBAAsB;AAA/C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA0BM,KAAK,CAACY,EAAhC,CADT,EAES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIAFT,EAGWX,UAAU,IACb,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEEE,IAAI,CAACU,GAAL,CAASC,GAAG,IACV,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAId,KAAK,CAACO,OAAjC;AAA0C,IAAA,GAAG,EAAIO,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAMCX,IAAI,CAACU,GAAL,CAASC,GAAG,IACT,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAId,KAAK,CAACO,OAAjC;AAA0C,IAAA,GAAG,EAAIO,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAND,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAbA,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDX,IAAI,CAACU,GAAL,CAASC,GAAG,IAET,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAId,KAAK,CAACO,OAA5B;AAAqC,IAAA,GAAG,EAAIO,GAA5C;AAAiD,IAAA,QAAQ,EAAG,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADC,CADA,CAdF,CAJR,EA8BST,KAAK,IACN,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BR,CADJ;AAoCH","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport beckgroungTransperant from '../../beckgroungTransperant.png'\nimport ImageView from './ImageView';\nimport AbsModulesView from './AbsModulesView';\nimport AdjModulesView from './AdjModulesView';\nimport NoResults from './NoResults';\n\n\nexport default function OverviewPanel(props) {\n    const [hasResults, sethasResults] = useState(false)\n    const [rows, setrows] = useState([])\n    const [error, setErrror] = useState(false)\n \n    useEffect(() => {\n        if(props.results!=''){\n            sethasResults(true)\n            setrows(Object.keys(props.results.image))\n                      \n        }\n        else{\n            setErrror(true)\n        }\n        return () => {     \n        }\n    }, [])\n\n \n    return (\n        <div style={{backgroundImage: `url(${beckgroungTransperant})`}}>           \n                 <h1>Overview for project {props.id}</h1>\n                 <h3>All generated modules are presented and can be downloaded, as well as figure pointing on thr motivation to adjust cytokine values</h3>\n                 { hasResults && \n                <React.Fragment>\n                 <h2>Modules</h2>\n                 {rows.map(row =>                  \n                    <AbsModulesView results = {props.results} row = {row} />\n                    )\n                }\n                {rows.map(row =>    \n                    <AdjModulesView results = {props.results} row = {row} />\n                    )\n                }\n                \n                \n                <h2>Figures</h2>\n                <h4> Click to download any of the output figures </h4>  \n                  <table>\n                  <tbody>\n                {rows.map(row =>                  \n                    \n                    <ImageView results = {props.results} row = {row} location = 'overview'/>\n\n                    )\n                }\n                </tbody>\n                </table>\n                </React.Fragment>\n                }\n                {error && \n                <NoResults/>\n                }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}